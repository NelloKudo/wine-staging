From b6d2054d5cd0787c18631e520594e9442c76781d Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 6 Feb 2023 15:40:24 +1100
Subject: [PATCH] odbc32: Forward SQLBindParameter request onto driver

---
 dlls/odbc32/proxyodbc.c | 37 ++++++++++++++++++++++++++++++++++++-
 1 file changed, 36 insertions(+), 1 deletion(-)

diff --git a/dlls/odbc32/proxyodbc.c b/dlls/odbc32/proxyodbc.c
index 40128395b32..4d2f472740c 100644
--- a/dlls/odbc32/proxyodbc.c
+++ b/dlls/odbc32/proxyodbc.c
@@ -1893,12 +1893,47 @@ SQLRETURN WINAPI SQLBindParameter(SQLHSTMT hstmt, SQLUSMALLINT ipar, SQLSMALLINT
                                   SQLSMALLINT ibScale, SQLPOINTER rgbValue, SQLLEN cbValueMax,
                                   SQLLEN *pcbValue)
 {
+    struct SQLHSTMT_data *statement = hstmt;
     SQLRETURN ret = SQL_ERROR;
 
-    FIXME("(hstmt %p, ipar %d, fParamType %d, fCType %d, fSqlType %d, cbColDef %s, ibScale %d, rgbValue %p,"
+    TRACE("(hstmt %p, ipar %d, fParamType %d, fCType %d, fSqlType %d, cbColDef %s, ibScale %d, rgbValue %p,"
           " cbValueMax %s, pcbValue %p)\n", hstmt, ipar, fParamType, fCType, fSqlType, debugstr_sqlulen(cbColDef),
           ibScale, rgbValue, debugstr_sqllen(cbValueMax), pcbValue);
 
+    if (statement->type != SQL_HANDLE_STMT)
+    {
+        WARN("Wrong handle type %d\n", statement->type);
+        return SQL_ERROR;
+    }
+
+    if (statement->connection->pSQLBindParameter)
+    {
+        ret = statement->connection->pSQLBindParameter(statement->driver_stmt, ipar, fParamType,
+                                  fCType, fSqlType, cbColDef, ibScale, rgbValue, cbValueMax, pcbValue);
+    }
+    else if(statement->connection->pSQLBindParam)
+    {
+        /* TODO: Make function */
+        if(fCType == SQL_C_TYPE_TIME)
+            fCType = SQL_C_TIME;
+        else if(fCType == SQL_C_TYPE_DATE)
+            fCType = SQL_C_DATE;
+        else if(fCType == SQL_C_TYPE_TIMESTAMP)
+            fCType = SQL_C_TIMESTAMP;
+
+        /* TODO: Make function */
+        if (fSqlType == SQL_TIME)
+            fSqlType = SQL_TYPE_TIME;
+        else if (fSqlType == SQL_DATE)
+            fSqlType = SQL_TYPE_DATE;
+        else if (fSqlType == SQL_TIMESTAMP)
+            fSqlType = SQL_TYPE_TIMESTAMP;
+
+        ret = statement->connection->pSQLBindParam(statement->driver_stmt, ipar, fCType, fSqlType,
+                                                   cbColDef, ibScale, rgbValue, pcbValue);
+    }
+
+    TRACE("ret %d\n", ret);
     return ret;
 }
 
-- 
2.43.0

