From bd50499e151d9bb56254dcc8d3f745dd3e7828d6 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Wed, 17 Jul 2024 22:03:03 +1000
Subject: [PATCH] odbc32: SQLColAttributesW support ODBC v2.0

---
 dlls/odbc32/proxyodbc.c | 39 +++++++++++++++++++++++++++++++++++----
 1 file changed, 35 insertions(+), 4 deletions(-)

diff --git a/dlls/odbc32/proxyodbc.c b/dlls/odbc32/proxyodbc.c
index 9ca4f35c332..91881635cab 100644
--- a/dlls/odbc32/proxyodbc.c
+++ b/dlls/odbc32/proxyodbc.c
@@ -455,7 +455,12 @@ SQLRETURN WINAPI SQLAllocHandle(SQLSMALLINT HandleType, SQLHANDLE InputHandle, S
             }
         }
 
-        if (SUCCESS( ret )) output->win32_funcs = input->win32_funcs;
+        if (SUCCESS( ret ))
+        {
+            output->win32_funcs = input->win32_funcs;
+            output->env_attr_version = input->env_attr_version;
+            output->driver_ver = input->driver_ver;
+        }
     }
 
     if (SUCCESS( ret )) *OutputHandle = output;
@@ -486,7 +491,12 @@ SQLRETURN WINAPI SQLAllocStmt(SQLHDBC ConnectionHandle, SQLHSTMT *StatementHandl
     else if (con->win32_handle)
     {
         ret = con->win32_funcs->SQLAllocStmt( con->win32_handle, &stmt->win32_handle );
-        if (SUCCESS( ret )) stmt->win32_funcs = con->win32_funcs;
+        if (SUCCESS( ret ))
+        {
+            stmt->win32_funcs = con->win32_funcs;
+            stmt->env_attr_version = con->env_attr_version;
+            stmt->driver_ver = con->driver_ver;
+        }
     }
 
     if (SUCCESS( ret )) *StatementHandle = stmt;
@@ -525,7 +535,12 @@ SQLRETURN WINAPI SQLAllocHandleStd(SQLSMALLINT HandleType, SQLHANDLE InputHandle
     else if (input->win32_handle)
     {
         ret = input->win32_funcs->SQLAllocHandleStd( HandleType, input->win32_handle, &output->win32_handle );
-        if (SUCCESS( ret )) output->win32_funcs = input->win32_funcs;
+        if (SUCCESS( ret ))
+        {
+            output->win32_funcs = input->win32_funcs;
+            output->env_attr_version = input->env_attr_version;
+            output->driver_ver = input->driver_ver;
+        }
     }
 
     if (SUCCESS( ret )) *OutputHandle = output;
@@ -4130,11 +4145,27 @@ static SQLRETURN col_attribute_win32_w( struct handle *handle, SQLUSMALLINT col,
                                                       retlen, num_attr );
     else if(handle->win32_funcs->SQLColAttributesW)
     {
+        SQLRETURN ret;
+
         /* ODBC v2 */
         field_id = map_odbc3_to_2(field_id);
-        return handle->win32_funcs->SQLColAttributesW( handle->win32_handle, col, field_id,
+        ret = handle->win32_funcs->SQLColAttributesW( handle->win32_handle, col, field_id,
                                                  char_attr, buflen, retlen,
                                                  num_attr );
+        /* Convert back for ODBC3 drivers */
+        if (num_attr && field_id == SQL_COLUMN_TYPE &&
+                handle->env_attr_version == SQL_OV_ODBC2 &&
+                handle->driver_ver == SQL_OV_ODBC3)
+        {
+            if (*num_attr == SQL_TIME)
+                *num_attr = SQL_TYPE_TIME;
+            else if (*num_attr == SQL_DATETIME)
+                *num_attr = SQL_TYPE_DATE;
+            else if (*num_attr == SQL_TIMESTAMP)
+                *num_attr = SQL_TYPE_TIMESTAMP;
+        }
+
+        return ret;
     }
     if (handle->win32_funcs->SQLColAttribute) FIXME( "Unicode to ANSI conversion not handled\n" );
     return SQL_ERROR;
-- 
2.43.0

